<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 77f5f3b3a8bbe1ad7727201c7603d1419dd7840f Maintainer: mproshchuk Status: ready -->
 <chapter xml:id="introduction" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <info>
   <titleabbrev>Вступ</titleabbrev>
   <title>Що таке PHP та що з цим можна робити?</title>
  </info>


  <section xml:id="intro-whatis" annotations="chunk:false">
   <info><title>Що таке PHP?</title></info>
   <para>
    <acronym>PHP</acronym> (рекурсивний акронім словосполучення <emphasis>PHP:
    Hypertext Preprocessor</emphasis>) — це найпоширеніша мова програмування
    загального призначення з відкритим початковим кодом. PHP сконструйована
    спеціально для ведення веброзробок, а її код може впроваджуватися
    безпосередньо в HTML.
   </para>
   <para>
    Проста відповідь, але що вона може означати?
   </para>
   <para>
    <example>
     <info><title>Ознайомлення</title></info>
     <programlisting role="php">
<![CDATA[
<!DOCTYPE html>
<html>
    <head>
        <title>Приклад</title>
    </head>
    <body>

        <?php
            echo "Привіт, я — PHP скрипт!";
        ?>

    </body>
</html>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Замість багатьох команд для виведення HTML (як це виглядає в C або Perl),
    PHP-сторінки містять HTML з вбудованим кодом, який
    <replaceable>щось</replaceable> робить (в цьому випадку виводить
    <computeroutput>Привіт, я — PHP скрипт!</computeroutput>). Код PHP
    відокремлюється спеціальними <link
    linkend="language.basic-syntax.phpmode">початковими і кінцевими тегами
    <code>&lt;?php</code> та <code>?&gt;</code></link>, які дозволяють
    перемикатись в <quote>PHP-режим</quote> і, відповідно, виходити з нього.
   </para>
   <para>
    PHP відрізняється від JavaScript тим, що PHP-скрипти виконуються на сервері
    і генерують HTML, яка видається клієнту. Клієнт отримуватиме результат
    виконання певного скрипта, але не знатиме який саме код його згенерував.
    Вебсервер можна налаштувати для обробки всіх файли HTML через PHP так, що
    клієнти навіть не зможуть дізнатися, чи використовується PHP.
   </para>
   <para>
    Найкращим у використанні PHP є те, що мова дуже проста для новачків, але
    пропонує багато додаткових функцій для професійних програмістів. Не бійтесь
    читання довгого списку можливостей PHP. За допомогою PHP майже будь-хто може
    розпочати роботу і писати прості скрипти досить швидко.
   </para>
   <para>
    Хоча розробники PHP сфокусовані на скриптах на стороні сервера, сфера
    застосування не обмежується лише цим. Читайте далі, та не пропустіть розділ
    <link linkend="intro-whatcando">Можливості PHP</link>, або почніть з <link
    linkend="tutorial">простого посібника</link>, щоб одразу перейти до вивчення
    вебпрограмування.
   </para>
  </section>

  <section xml:id="intro-whatcando" annotations="chunk:false">
   <info><title>Що може робити PHP?</title></info>
   <para>
    Будь-що. Головним чином PHP сфокусована на написанні скриптів, що працюють
    на стороні сервера, отже можна робити будь-що, що роблять CGI-програми,
    наприклад, обробку даних форм, генерування вмісту динамічних сторінок, або
    відправлення та отримання куків. Але PHP має значно ширші можливості.
   </para>
   <para>
    Існують дві основні сфери застосування PHP-скриптів.
    <itemizedlist>
     <listitem>
      <simpara>
       Написання скриптів для виконання на стороні сервера. PHP найчастіше
       застосовується саме таким чином. Для цього потрібні всього три речі:
       парсер PHP (CGI або модуль сервера), вебсервер та веббраузер. Все це
       можна запустити на домашньому комп'ютері, якщо потрібно просто
       поекспериментувати з програмуванням на PHP. Докладніше у розділі
       <link linkend="install">Встановлення та налаштування</link>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Створення скриптів для виконання в командному рядку. PHP-скрипти можна
       запускати без будь-якого сервера чи браузера, потрібен лише PHP-парсер.
       Цей тип використання ідеальний для скриптів, що регулярно запускаються
       через <command>cron</command> (на Unix чи macOS) або Планувальник завдань
       (на Windows). Ці скрипти можна також використовувати для простої обробки
       текстів. Докладнішу інформацію можна знайти в розділі <link
       linkend="features.commandline">Використання командного рядка PHP</link>.
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    PHP можна <link linkend="install">використовувати</link> у більшості
    операційних систем, як-от Linux, багато варіантів Unix (напр. HP-UX, Solaris
    та OpenBSD), Microsoft Windows, macOS X, RISC OS та, можливо, інші. PHP
    також має підтримку для більшості сучасних вебсерверів, таких як Apache, IIS
    та багато інших. Окрім цього, підтримка є на будь-якому вебсервері, який
    може запускати двійковий FastCGI PHP, наприклад на lighttpd та nginx. PHP
    працює або як модуль, або як CGI процесор.
   </para>
   <para>
    Тож з PHP розробники мають свободу вибору операційних систем та вебсерверів.
    Крім того, вони можуть вибрати процедурне або об'єктно-орієнтоване (ООП)
    програмування, чи їхнє поєднання.
   </para>
   <para>
    PHP не обмежується лише виводом HTML. Можливості PHP включають виведення
    файлів різноманітних типів, як от зображень або файлів PDF, шифрування
    даних і надсилання електронних листів. Також можна легко виводити будь-який
    текст, наприклад JSON або XML. PHP може автоматично генерувати ці файли та
    зберігати їх у файловій системі (а не лише виводити текст), формувати кеш на
    стороні сервера для динамічного вмісту.
   </para>
   <para>
    Одна з найсильніших та найбільш істотних особливостей в PHP - це підтримка
    <link linkend="refs.database">широкого кола баз даних</link>. Написання
    вебсторінки із застосуванням бази даних - неймовірно легке, використовуючи
    одне зі спеціальних розширень (наприклад для <link
    linkend="book.mysqli">mysql</link>), або використовуючи абстрактний
    прошарок, такий як <link linkend="book.pdo">PDO</link>. Також можна легко
    під'єднатись до будь-якої бази даних, що підтримує стандарт Open Database
    Connection через розширення <link linkend="book.uodbc">ODBC</link>. Інші
    бази даних, такі як CouchDB, можуть використовувати
    <link linkend="book.curl">cURL</link> або
    <link linkend="book.sockets">sockets</link>.
   </para>
   <para>
    PHP також підтримує взаємодію з іншими сервісами, використовуючи протоколи
    LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM (на Windows) та багато інших. Крім
    того, можна відкривати необроблені мережеві сокети та взаємодіяти з
    будь-яким іншим протоколом. PHP має підтримку обміну складних структур даних
    WDDX практично між всіма мовами вебпрограмування. Кажучи про взаємодію PHP
    з різними мовами, варто згадати про підтримку об'єктів Java та можливість
    їхнього прозорого використання як об'єктів PHP.
   </para>
   <para>
    PHP має корисні можливості для <link linkend="refs.basic.text">обробки
    тексту</link>, включно з регулярними виразами, сумісними з Perl
    (<link linkend="book.pcre">PCRE</link>), і багато розширень та інструментів
    для <link linkend="refs.xml">обробки та маніпуляцій з документами
    XML</link>. PHP стандартизує всі розширення XML на солідній базі бібліотеки
    <link linkend="book.libxml">libxml2</link> та розширює набір функцій,
    додаючи підтримку <link linkend="book.simplexml">SimpleXML</link>,
    <link linkend="book.xmlreader">XMLReader</link> та
    <link linkend="book.xmlwriter">XMLWriter</link>.
   </para>
   <para>
    Існує ще багато інших цікавих розширень, які можна проглянути як в
    <link linkend="extensions">алфавітному порядку</link> так і за
    <link linkend="funcref">категоріями</link>. Також в даному посібнику з PHP
    є багато додаткових <link linkend="install.pecl.intro">розширень
    PECL</link>, як от <link xlink:href="&url.xdebug;">XDebug</link>, що вже
    документовані або ще ні.
   </para>
   <para>
    Цієї сторінки не вистачить, щоб охопити весь спектр можливостей та переваг,
    що пропонує PHP. В наступному розділі читайте про <link
    linkend="install">встановлення PHP</link>, а також прогляньте розділ <link
    linkend="funcref">Довідник функцій</link> для докладніших пояснень про
    згадані тут розширення.
   </para>
  </section>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
