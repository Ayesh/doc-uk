<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 2d0ae2133ccc5365c31ac675c88cda06b4877e22 Maintainer: mproshchuk Status: ready -->
 <chapter xml:id="introduction" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <info><title>Вступ</title></info>

  <section xml:id="intro-whatis">
   <info><title>Що таке PHP?</title></info>
   <para>
    <acronym>PHP</acronym> (рекурсивний акронім словосполучення <literal>PHP:
    Hypertext Preprocessor</literal>) — це найпоширеніша мова програмування
    загального призначення з відкритим початковим кодом. PHP сконструйована
    спеціально для ведення веброзробок, а її код може впроваджуватися
    безпосередньо в HTML.
   </para>
   <para>
    Проста відповідь, але що вона може означати?
   </para>
   <para>
    <example>
     <info><title>Ознайомлення</title></info>
     <programlisting role="php">
<![CDATA[
<!DOCTYPE html>
<html>
    <head>
        <title>Приклад</title>
    </head>
    <body>

        <?php
            echo "Привіт, я - PHP скрипт!";
        ?>

    </body>
</html>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Замість багатьох команд для виведення HTML (як це ми бачимо в C або Perl),
    PHP сторінки містять HTML з вбудованим кодом, який "щось" робить
    (в нашому випадку, виводить "Привіт, я - PHP скрипт!").
    Код PHP відокремлюється спеціальними <link
    linkend="language.basic-syntax.phpmode">початковими і кінцевими тегами
  <code>&lt;?php</code> та <code>?&gt;</code>
  </link>,
    які дозволяють "перемикатись" в "PHP режим" і виходити з нього.
   </para>
   <para>
    PHP відрізняється від JavaScript тим, що PHP-скрипти виконуються на сервері
    і генерують HTML, яка видається клієнту. Клієнт отримуватиме результат
    виконання певного скрипта, але не знатиме який саме код його згенерував. Ви
    навіть можете налаштувати вебсервер обробляти всі файли HTML через PHP так,
    що клієнти навіть не зможуть дізнатися, чи отримують вони звичайний
    HTML-файл, чи результат виконання скрипта.
   </para>
   <para>
    Найкращим у використанні PHP є те, що вона дуже проста для новачків, але
    пропонує багато додаткових функцій для професійних програмістів. Не бійтесь
    читання довгого списку можливостей PHP. Ви можете легко почати та вже
    протягом кількох годин зможете писати прості скрипти.
   </para>
   <para>
    Хоча розробники PHP сфокусовані на скриптах на стороні сервера,
    сфера застосування не обмежується лише цим. Читайте далі, та не пропустіть
    розділ <link linkend="intro-whatcando">Можливості PHP</link>,
    або зразу почніть з <link linkend="tutorial">простого посібника</link>,
    якщо вас цікавить виключно вебпрограмування.
   </para>
  </section>

  <section xml:id="intro-whatcando">
   <info><title>Що може робити PHP?</title></info>
   <para>
    Будь-що. Головним чином PHP сфокусована на написанні скриптів, що працюють
    на стороні сервера, отже ви можете робити будь-що, що роблять CGI програми,
    наприклад, обробку даних форм, генерування вмісту динамічних сторінок, або
    відправлення та отримання куків. Але PHP має значно ширші можливості.
   </para>
   <para>
    Існують дві основні сфери застосування PHP-скриптів.
    <itemizedlist>
     <listitem>
      <simpara>
       Написання скриптів для виконання на стороні сервера. PHP традиційно і
       найбільш широко використовується саме таким чином. Для цього вам потрібні
       будуть всього три речі: парсер PHP (CGI або модуль сервера), вебсервер та
       веббраузер. Вам потрібно запустити вебсервер з встановленим на ньому PHP.
       Через вебсервер можна пропускати сторінку з кодом PHP, та проглядати
       результат її роботи через веббраузер. Все це можна робити на вашому
       домашньому комп'ютері, якщо ви просто експериментуєте програмування на
       PHP. Читайте розділ з <link linkend="install">інструкціями
       встановлення</link> для докладнішої інформації.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Створення скриптів для виконання в командному рядку. Ви можете створювати
       PHP-скрипти, що можуть запускатись без будь-якого сервера чи браузера.
       Для цього вам потрібен лише PHP-парсер. Цей тип використання ідеальний
       для скриптів, що регулярно запускаються через cron (на *nix чи Linux) або
       Планувальник Задач (на Windows). Ці скрипти можуть також
       використовуватись для простої обробки текстів. Докладнішу інформацію
       можна знайти в розділі <link linkend="features.commandline">Використання
       командного рядка PHP</link>.
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    PHP може <link linkend="install">використовуватись</link> у більшості
    операційних систем, як-от Linux, багато варіантів Unix (напр. HP-UX, Solaris
    та OpenBSD), Microsoft Windows, macOS X, RISC OS та, можливо, інші. PHP
    також має підтримку для більшості сучасних вебсерверів, таких як Apache, IIS
    та багато інших. Окрім цього, підтримка є на будь-якому вебсервері, який
    може запускати двійковий FastCGI PHP, наприклад на lighttpd та nginx. PHP
    працює або як модуль, або як CGI процесор.
   </para>
   <para>
    Тож з PHP ви маєте свободу вибору операційних систем та вебсерверів. Крім
    того, ви маєте можливість вибрати процедурне або об'єктно-орієнтоване (ООП)
    програмування, чи їхнє поєднання.
   </para>
   <para>
    З PHP ви не обмежені видачею лише HTML. Можливості PHP включають виведення
    різноманітних типів файлів, таких як зображення або файли PDF, шифрування
    даних і надсилання електронних листів. Ви також можете легко виводити
    будь-який текст, такий як JSON та XML. PHP може автоматично генерувати ці
    файли, та зберігати їх у файловій системі (а не лише виводити текст),
    формувати кеш на стороні сервера для динамічного вмісту.
   </para>
   <para>
    Одна з найсильніших та найбільш істотних особливостей в PHP - це підтримка
    <link linkend="refs.database">широкого кола баз даних</link>. Написання
    вебсторінки із застосуванням бази даних - неймовірно легке, використовуючи
    одне зі спеціальних розширень (наприклад для
    <link linkend="book.mysqli">mysql</link>), або використовуючи абстрактний
    прошарок, такий як <link linkend="book.pdo">PDO</link>. Також можна легко
    під'єднатись до будь-якої бази даних, що підтримує стандарт Open Database
    Connection через розширення <link linkend="book.uodbc">ODBC</link>. Інші
    бази даних, такі як CouchDB, можуть використовувати
    <link linkend="book.curl">cURL</link> або
    <link linkend="book.sockets">sockets</link>.
   </para>
   <para>
    PHP також підтримує взаємодію з іншими сервісами, використовуючи протоколи
    LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM (на Windows) та багато інших. Крім
    того, ви маєте можливість відкривати необроблені мережеві сокети та
    взаємодіяти з будь-яким іншим протоколом. PHP має підтримку обміну для
    складних структур даних WDDX практично між всіма мовами вебпрограмування.
    Говорячи про взаємодію PHP з різними мовами, варто згадати про підтримку
    об'єктів Java та можливість їхнього прозорого використання в якості об'єктів
    PHP.
   </para>
   <para>
    PHP має корисні можливості для <link linkend="refs.basic.text">обробки
    тексту</link>, включно з регулярними виразами, сумісними з Perl
    (<link linkend="book.pcre">PCRE</link>), і багато розширень та інструментів
    для <link linkend="refs.xml">обробки та маніпуляцій з документами
    XML</link>. PHP стандартизує всі розширення XML на солідній базі бібліотеки
    <link linkend="book.libxml">libxml2</link> та розширює набір функцій,
    додаючи підтримку <link linkend="book.simplexml">SimpleXML</link>,
    <link linkend="book.xmlreader">XMLReader</link> та
    <link linkend="book.xmlwriter">XMLWriter</link>.
   </para>
   <para>
    Існує ще багато інших цікавих розширень, які можна проглянути як в
    <link linkend="extensions">алфавітному порядку</link> так і по
    <link linkend="funcref">категоріях</link>. Також в даному посібнику з PHP
    є багато додаткових <link linkend="install.pecl.intro">розширень
    PECL</link>, таких як <link xlink:href="&url.xdebug;">XDebug</link>, що вже
    документовані або ще ні.
   </para>
   <para>
    Як бачите — цієї сторінки не достатньо, щоб охопити весь спектр можливостей
    та переваг, що пропонує PHP. Читайте в наступному розділі про
    <link linkend="install">встановлення PHP</link>, та прогляньте розділ
    <link linkend="funcref">Довідник функцій</link> для більш детальних
    пояснень про згадані тут розширення.
   </para>
  </section>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
