<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 24e5510d907b3be789bd773c5c8c01b29e22af47 Maintainer: ktretyak Status: wip -->
<!-- $Revision$ -->

<phpdoc:varentry xmlns:phpdoc="http://php.net/ns/phpdoc" xml:id="reserved.variables.server" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>$_SERVER</refname>
  <refname>$HTTP_SERVER_VARS [видалена]</refname>
  <refpurpose>Інформація про серверне та виконавче оточення</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>
   Змінна <varname>$_SERVER</varname> є масивом (<type>array</type>), що
   містить таку інформацію як заголовки, шляхи та розташування скриптів.
   Записи в цьому масиві створює веб-сервер. Немає гарантії того, що кожен
   веб-сервер буде надавати всі ці записи; веб-сервери можуть опускати деякі з
   них, або надавати інші, незазначені в списку, наведеному нижче. Тим не
   менше, але більша частина з цих змінних взяті на облік в
   <link xlink:href="&url.rfc;3875">специфікації CGI/1.1</link>, отже вам варто
   бути готовим до них.
  </para>

  <simpara>
   Змінна <varname>$HTTP_SERVER_VARS</varname> містить таку ж ініціалізуючу
   інформацію, але не є
   <link linkend="language.variables.superglobals">суперглобальною</link>.
   (Зауважте, що <varname>$HTTP_SERVER_VARS</varname> та <varname>$_SERVER</varname>
   є різними змінними, а тому PHP обробляє їх як такі). Також майте на увазі,
   що масиви з довгою назвою були видалені починаючи з PHP 5.4.0, отже
   змінної <varname>$HTTP_SERVER_VARS</varname> більше не існує.
  </simpara>
 </refsect1>

 <refsect1 role="indices">
  &reftitle.indices;

  <simpara>
   Ви можете знайти (а можете і не знайти) будь-який з наступних елементів в
   <varname>$_SERVER</varname>. Невелика кількість з них можуть бути
   доступними (або дійсно матимуть значення), якщо ви запускаєте PHP з
   <link linkend="features.commandline">командного рядка</link>.
  </simpara>

  <para>
   <variablelist>
    <varlistentry>
     <term>'<varname>PHP_SELF</varname>'</term>
     <listitem>
      <simpara>
       Шлях до файла, де в даний момент запущено скрипт, відносно кореневого
       каталогу документів веб-сервера (document root). Наприклад,
       <varname>$_SERVER['PHP_SELF']</varname> в скрипті за адресою
       <filename>http://example.com/foo/bar.php</filename>
       буде <filename>/foo/bar.php</filename>.
       Константа <link linkend="language.constants.predefined">__FILE__</link>
       містить повний шлях та назву поточного (тобто підключеного) файла.
      </simpara>
      <simpara>
       Якщо PHP запущено з командного рядка, ця змінна містить назву скрипта починаючи з
       PHP 4.3.0, раніше це було не доступно.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<link linkend="reserved.variables.argv">argv</link>'</term>
     <listitem>
      <simpara>
       Масив аргументів, переданих до скрипта. Коли скрипт запущено з
       командного рядка, то є можливість передавати до нього параметри в
       C-стилі. При виклику через метод GET, цей масив містить рядок запиту.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<link linkend="reserved.variables.argc">argc</link>'</term>
     <listitem>
      <simpara>
       Містить число параметрів, переданих до скрипта з командного рядка
       (якщо скрипт запущено з командного рядка).
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>GATEWAY_INTERFACE</varname>'</term>
     <listitem>
      <simpara>
       Назва та номер ревізії специфікації CGI сервера, що використовується;
       наприклад, '<literal>CGI/1.1</literal>'.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_ADDR</varname>'</term>
     <listitem>
      <simpara>
       IP-адреса сервера, під яким поточний скрипт виконується.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_NAME</varname>'</term>
     <listitem>
      <simpara>
       Назва хоста сервера, під яким поточний скрипт виконується. Якщо скрипт
       запущено на віртуальному хості, ця змінна міститиме його назву.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_SOFTWARE</varname>'</term>
     <listitem>
      <simpara>
       Ідентифікаційний рядок сервера, передається в заголовках при
       відповіді на запит.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_PROTOCOL</varname>'</term>
     <listitem>
      <simpara>
       Назва та номер ревізії протоколу, через який було запитано сторінку;
       наприклад, '<literal>HTTP/1.0</literal>';
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>'<varname>REQUEST_METHOD</varname>'</term>
     <listitem>
      <simpara>
       Назву метода, що використовувався при запиті сторінки;
       тобто '<literal>GET</literal>',
       '<literal>HEAD</literal>', '<literal>POST</literal>',
       '<literal>PUT</literal>'.
      </simpara>
      <note>
       <para>
        Скрипт PHP завершує роботу після відправки заголовків (тобто,
        після здійснення будь-якого виводу без його буферизації) якщо метод
        запиту був <literal>HEAD</literal>.
       </para>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REQUEST_TIME</varname>'</term>
     <listitem>
      <simpara>
       Мітка часу, коли почався запит. Доступна починаючи з PHP 5.1.0.
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>'<varname>REQUEST_TIME_FLOAT</varname>'</term>
     <listitem>
      <simpara>
       Мітка часу, коли почався запит, з точністю до мікросекунд.
       Доступна починаючи з PHP 5.4.0.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>QUERY_STRING</varname>'</term>
     <listitem>
      <simpara>
       Рядок запиту, якщо він є, через який доступились до сторінки.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>DOCUMENT_ROOT</varname>'</term>
     <listitem>
      <simpara>
       Коринева директорія документів (document root), з під якої поточний
       скрипт викориується, як визначено в конфігураційному файлі веб-сервера.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>HTTP_ACCEPT</varname>'</term>
     <listitem>
      <simpara>
       Вміст заголовка <literal>Accept:</literal> з поточного запита,
       якщо він є.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>HTTP_ACCEPT_CHARSET</varname>'</term>
     <listitem>
      <simpara>
       Вміст заголовка <literal>Accept-Charset:</literal>
       з поточного запита, якщо він є. Наприклад:
       '<literal>iso-8859-1,*,utf-8</literal>'.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>HTTP_ACCEPT_ENCODING</varname>'</term>
     <listitem>
      <simpara>
       Вміст заголовка <literal>Accept-Encoding:</literal> з поточного запита,
       якщо він є. Наприклад: '<literal>gzip</literal>'.
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>'<varname>HTTP_ACCEPT_LANGUAGE</varname>'</term>
     <listitem>
      <simpara>
       Вміст заголовка <literal>Accept-Language:</literal> з поточного запита,
       якщо він є. Наприклад: '<literal>en</literal>'.
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>'<varname>HTTP_CONNECTION</varname>'</term>
     <listitem>
      <simpara>
       Вміст заголовка <literal>Connection:</literal> з поточного запита,
       якщо він є. Наприклад: '<literal>Keep-Alive</literal>'.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>HTTP_HOST</varname>'</term>
     <listitem>
      <simpara>
       Вміст заголовка <literal>Host:</literal> з поточного запита,
       якщо він є.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>HTTP_REFERER</varname>'</term>
     <listitem>
      <simpara>
       Адреса сторінки (якщо така є), з якої користувач перейшов
       на поточну сторінку. Це значення встановлюється браузером. Не всі
       браузери встановлюють це значення, а деякі надають можливість
       модифікувати <varname>HTTP_REFERER</varname>як додаткову можливість.
       Якщо коротко - цьому значенню не можна довіряти.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>HTTP_USER_AGENT</varname>'</term>
     <listitem>
      <simpara>
       Вміст заголовка <literal>User-Agent:</literal> з поточного запита,
       якщо він є. This is a string
       denoting the user agent being which is accessing the page. A
       typical example is: <computeroutput>Mozilla/4.5 [en] (X11; U;
       Linux 2.2.9 i586)</computeroutput>. Among other things, you
       can use this value with <function>get_browser</function> to
       tailor your page's output to the capabilities of the user
       agent.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>HTTPS</varname>'</term>
     <listitem>
      <simpara>
       Set to a non-empty value if the script was queried through the HTTPS
       protocol.
      </simpara>
      <note>
       <simpara>
        Note that when using ISAPI with IIS, the value will be 
        <literal>off</literal> if the request was not made through the HTTPS
        protocol.
       </simpara>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REMOTE_ADDR</varname>'</term>
     <listitem>
      <simpara>
       The IP address from which the user is viewing the current
       page.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REMOTE_HOST</varname>'</term>
     <listitem>
      <simpara>
       The Host name from which the user is viewing the current
       page.  The reverse dns lookup is based off the 
       <varname>REMOTE_ADDR</varname> of the user.
      </simpara>
      <note>
       <simpara>
        Your web server must be configured to create this variable. For
        example in Apache you'll need <literal>HostnameLookups On</literal>
        inside &httpd.conf; for it to exist.  See also
        <function>gethostbyaddr</function>.
       </simpara>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REMOTE_PORT</varname>'</term>
     <listitem>
      <simpara>
       The port being used on the user's machine to communicate with
       the web server.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REMOTE_USER</varname>'</term>
     <listitem>
      <simpara>
        The authenticated user.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REDIRECT_REMOTE_USER</varname>'</term>
     <listitem>
      <simpara>
        The authenticated user if the request is internally redirected.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SCRIPT_FILENAME</varname>'</term>
     <listitem>
      <para>
       The absolute pathname of the currently executing script.
       <note>
        <para>
         If a script is executed with the CLI, as a relative path,
         such as <filename>file.php</filename> or 
         <filename>../file.php</filename>, 
         <varname>$_SERVER['SCRIPT_FILENAME']</varname> will 
         contain the relative path specified by the user.
        </para>
       </note>
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_ADMIN</varname>'</term>
     <listitem>
      <simpara>
       The value given to the SERVER_ADMIN (for Apache) directive in
       the web server configuration file. If the script is running
       on a virtual host, this will be the value defined for that
       virtual host.
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>'<varname>SERVER_PORT</varname>'</term>
     <listitem>
      <simpara>
       The port on the server machine being used by the web server
       for communication. For default setups, this will be '<literal>80</literal>';
       using SSL, for instance, will change this to whatever your
       defined secure HTTP port is.
      </simpara>
      <note>
       <simpara>
        Under the Apache 2, you must set <literal>UseCanonicalName = On</literal>, 
        as well as <literal>UseCanonicalPhysicalPort = On</literal> in order to
        get the physical (real) port, otherwise, this value can be spoofed and it
        may or may not return the physical port value.
        It is not safe to rely on this value in security-dependent contexts.
       </simpara>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_SIGNATURE</varname>'</term>
     <listitem>
      <simpara>
       String containing the server version and virtual host name
       which are added to server-generated pages, if enabled.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>PATH_TRANSLATED</varname>'</term>
     <listitem>
      <simpara>
       Filesystem- (not document root-) based path to the current
       script, after the server has done any virtual-to-real
       mapping.
      </simpara>
      <note>
       <simpara>
        As of PHP 4.3.2, <envar>PATH_TRANSLATED</envar> is no longer set 
        implicitly under the Apache 2 <acronym>SAPI</acronym> in contrast 
        to the situation in Apache 1, where it's set to the same value as 
        the <envar>SCRIPT_FILENAME</envar> server variable when it's not 
        populated by Apache.  This change was made to comply with the 
        <acronym>CGI</acronym> specification that 
        <envar>PATH_TRANSLATED</envar> should only exist if 
        <envar>PATH_INFO</envar> is defined.
       </simpara>
       <simpara>
        Apache 2 users may use <literal>AcceptPathInfo = On</literal> inside
        <filename>httpd.conf</filename> to define <envar>PATH_INFO</envar>.
       </simpara>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SCRIPT_NAME</varname>'</term>
     <listitem>
      <simpara>
       Contains the current script's path. This is useful for pages
       which need to point to themselves.
       The <link linkend="language.constants.predefined">__FILE__</link>
       constant contains the full path and filename of the current (i.e.
       included) file.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REQUEST_URI</varname>'</term>
     <listitem>
      <simpara>
       The URI which was given in order to access this page; for
       instance, '<literal>/index.html</literal>'.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>PHP_AUTH_DIGEST</varname>'</term>
     <listitem>
      <simpara>
       When doing Digest HTTP authentication this variable is set 
       to the 'Authorization' header sent by the client (which you 
       should then use to make the appropriate validation).
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>PHP_AUTH_USER</varname>'</term>
     <listitem>
      <simpara>
       When doing HTTP authentication this variable is set to the 
       username provided by the user.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>PHP_AUTH_PW</varname>'</term>
     <listitem>
      <simpara>
       When doing HTTP authentication this variable is set to the 
       password provided by the user.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>AUTH_TYPE</varname>'</term>
     <listitem>
      <simpara>
       When doing HTTP authenticated this variable is set to the 
       authentication type.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>PATH_INFO</varname>'</term>
     <listitem>
      <simpara>
       Contains any client-provided pathname information trailing the
       actual script filename but preceding the query string, if
       available. For instance, if the current script was accessed via
       the
       URL <filename>http://www.example.com/php/path_info.php/some/stuff?foo=bar</filename>,
       then <varname>$_SERVER['PATH_INFO']</varname> would
       contain <literal>/some/stuff</literal>.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>ORIG_PATH_INFO</varname>'</term>
     <listitem>
      <simpara>
       Original version of '<varname>PATH_INFO</varname>' before processed by
       PHP.
      </simpara>
     </listitem>
    </varlistentry>

   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.4.0</entry>
       <entry>
        <varname>$HTTP_SERVER_VARS</varname> isn't available anymore due to
        the removal of long arrays registering.
       </entry>
      </row>
      <row>
       <entry>5.3.0</entry>
       <entry>
        Directive <link linkend="ini.register-long-arrays">register_long_arrays</link>
        which caused <varname>$HTTP_SERVER_VARS</varname> to be available has been
        deprecated.
       </entry>
      </row>
      <row>
       <entry>4.1.0</entry>
       <entry>
        Introduced <varname>$_SERVER</varname> that deprecated
        <varname>$HTTP_SERVER_VARS</varname>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example xml:id="variable.server.basic">
    <title><varname>$_SERVER</varname> example</title>
    <programlisting role="php">
<![CDATA[
<?php
echo $_SERVER['SERVER_NAME'];
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
www.example.com
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  &note.is-superglobal;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="book.filter">The filter extension</link></member>
   </simplelist>
  </para>
 </refsect1>

</phpdoc:varentry>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

