<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 65716f4761484e314ee86fa23493f00f7823ace1 Maintainer: mproshchuk Status: ready -->
<sect1 xml:id="migration82.deprecated">
 <title>Deprecated Features</title>

 <sect2 xml:id="migration82.deprecated.core">
  <title>PHP Core</title>

  <sect3 xml:id="migration82.deprecated.core.dynamic-properties">
   <title>Використання динамічних властивостей</title>

   <para>
    Створення динамічних властивостей застаріло, якщо в класі не використано
    атрибут <code>#[\AllowDynamicProperties]</code>. В
    <classname>stdClass</classname> динамічні властивості — дозволені. Ця зміна
    не впливає на використання магічних методів <link
    linkend="object.get">__get()</link>/<link
    linkend="object.set">__set()</link>. Попередження про застаріле використання
    динамічних властивостей можна вимкнути:
    <simplelist>
     <member>Оголошення властивості (бажано).</member>
     <member>
      Додавання атрибуту <code>#[\AllowDynamicProperties]</code> до класу (що
      також діє і для класів-нащадків).
     </member>
     <member>
      Використання <classname>WeakMap</classname>, якщо додаткові дані потрібно
      пов'язати з об'єктом, яким ніщо не володіє.
     </member>
    </simplelist>
   </para>
  </sect3>

  <sect3 xml:id="migration82.deprecated.core.relative-callables">
   <title>Відносні виклики</title>

   <para>
    Назва виклику, що не дозволена з синтаксисом <code>$callable()</code>,
    (проте дозволена для <function>call_user_func</function>) — застаріла.

    Зокрема:
    <simplelist>
     <member><code>"self::method"</code></member>
     <member><code>"parent::method"</code></member>
     <member><code>"static::method"</code></member>
     <member><code>["self", "method"]</code></member>
     <member><code>["parent", "method"]</code></member>
     <member><code>["static", "method"]</code></member>
     <member><code>["Foo", "Bar::method"]</code></member>
     <member><code>[new Foo, "Bar::method"]</code></member>
    </simplelist>

    Це не впливає на звичайні назви викликів методів <code>"A::method"</code>
    або <code>["A", "method"]</code>.
   </para>
   <!-- RFC: https://wiki.php.net/rfc/deprecate_partially_supported_callables -->
   <!-- RFC: https://wiki.php.net/rfc/partially-supported-callables-expand-deprecation-notices -->
  </sect3>

  <sect3 xml:id="migration82.deprecated.core.dollar-brace-interpolation">
   <title>Інтерполяція у вигляді <code>"${var}"</code> і <code>"${expr}"</code></title>

   <para>
    Інтерполяція рядків у вигляді <code>"${var}"</code> і <code>"${expr}"</code>
    застаріла. Натомість краще застосовувати <code>"$var"/"{$var}"</code> та
    <code>"{${expr}}"</code> відповідно.
    <!-- RFC: https://wiki.php.net/rfc/deprecate_dollar_brace_string_interpolation -->
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration82.deprecated.mbstring">
  <title>MBString</title>

  <para>
   Використання "текстових кодувань" <literal>QPrint</literal>,
   <literal>Base64</literal>, <literal>Uuencode</literal> і
   <literal>HTML-ENTITIES</literal> застаріле для всіх функцій MBString.

   На відміну від  інших кодувань тексту, які підтримує MBString, вони не
   кодують послідовність кодових точок Unicode, а скоріше послідовність байтів.
   Не зрозуміло, якими мають бути значення, що повертаються більшістю функцій
   MBString, коли використовуються ці псевдо-кодування. Більше того, в PHP є
   окремі реалізації для кожного з них. Наприклад, UU-кодовані дані можна
   опрацювати функціями
   <function>convert_uuencode</function>/<function>convert_uudecode</function>.
  </para>
 </sect2>

 <sect2 xml:id="migration82.deprecated.spl">
  <title>SPL</title>

  <para>
   Внутрішній метод <methodname>SplFileInfo::_bad_state_ex</methodname> застарів.
  </para>
 </sect2>

 <sect2 xml:id="migration82.deprecated.standard">
  <title>Стандарнті функції</title>

  <para>
   Функції <function>utf8_encode</function> та <function>utf8_decode</function>
   застаріли.
  </para>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
